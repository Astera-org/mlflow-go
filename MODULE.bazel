"""Bazel module file. See https://bazel.build/external/overview#bzlmod."""

module(
    name = "mlflow_go",
    version = "0.0.1",
)

bazel_dep(name = "rules_proto", version = "5.3.0-21.7", dev_dependency = True)
bazel_dep(name = "protobuf", version = "21.7", dev_dependency = True, repo_name = "com_google_protobuf")

bazel_dep(name = "rules_go", version = "0.42.0")

go_sdk = use_extension("@rules_go//go:extensions.bzl", "go_sdk")
go_sdk.download(version = "1.21.1")

# Register the Go SDK installed on the host.
go_sdk.host()

bazel_dep(name = "gazelle", version = "0.33.0")

go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")

# Not in go.mod because it's not needed for building, only for development.
# In particular we use it to build goimports.
go_deps.module(
    path = "golang.org/x/tools",
    sum = "h1:Iey4qkscZuv0VvIt8E0neZjtPVQFSc870HQ448QgEmQ=",
    version = "v0.13.0",
)

# All direct deps from go.mod.
use_repo(
    go_deps,
    "com_github_google_uuid",
    "com_github_stretchr_testify",
    "in_gopkg_yaml_v3",
    "org_golang_google_protobuf",
    "org_golang_x_tools",
)

bazel_dep(name = "rules_python", version = "0.25.0")

python = use_extension("@rules_python//python/extensions:python.bzl", "python")

python_version = "3.11"

python.toolchain(python_version = python_version)

use_repo(python, "python_3_11")

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    hub_name = "pip",
    python_version = python_version,
    requirements_lock = "//:python_requirements_lock.txt",
)
use_repo(pip, "pip")
